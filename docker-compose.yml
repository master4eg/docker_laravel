services:
  nginx:
    image: nginx:1.27-alpine
    depends_on:
      - php
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app

  php:
    build:
      context: ./docker/php
      args:
        PUID: ${PUID:-1000}
        PGID: ${PGID:-1000}
    environment:
      PHP_MEMORY_LIMIT: 512M
      COMPOSER_HOME: /var/www/.composer
    volumes:
      - ./src:/var/www/html
      - composer_cache:/var/www/.composer
    networks:
      - app

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_HOST: "%"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "33060:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - app

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - app

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"   # MailHog web UI
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  db_data:
  composer_cache:
  redis_data:
